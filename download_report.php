<?php
require_once 'config/database.php';
session_start();

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit;
}

// Get report ID and format from URL
$report_id = isset($_GET['id']) ? (int)$_GET['id'] : 0;
$format = isset($_GET['format']) ? $_GET['format'] : 'pdf';

if (!$report_id) {
    die('Invalid report ID');
}

// Get report data
$stmt = $pdo->prepare("
    SELECT r.*, u.username as generated_by_name 
    FROM reports r 
    JOIN users u ON r.generated_by = u.id 
    WHERE r.id = ?
");
$stmt->execute([$report_id]);
$report = $stmt->fetch();

if (!$report) {
    die('Report not found');
}

    // Get air quality data for the report period
    $stmt = $pdo->prepare("
        SELECT a.*, d.name as device_name, l.name as location_name
        FROM air_quality_data a 
        JOIN devices d ON a.device_id = d.id 
        JOIN locations l ON d.location_id = l.id
        WHERE a.timestamp BETWEEN ? AND ?
        ORDER BY a.timestamp DESC
    ");
    $stmt->execute([$report['start_date'], $report['end_date']]);
    $air_quality_data = $stmt->fetchAll();
    
    // If no air quality data, create some sample data for demonstration
    if (empty($air_quality_data)) {
        $air_quality_data = [
            [
                'timestamp' => date('Y-m-d H:i:s', strtotime('-1 day')),
                'device_name' => 'Sample Device',
                'location_name' => 'Sample Location',
                'pm25' => 35.2,
                'pm10' => 68.7,
                'co2' => 420.5,
                'temperature' => 28.5,
                'humidity' => 65.0
            ],
            [
                'timestamp' => date('Y-m-d H:i:s', strtotime('-2 days')),
                'device_name' => 'Sample Device',
                'location_name' => 'Sample Location',
                'pm25' => 42.8,
                'pm10' => 75.3,
                'co2' => 435.2,
                'temperature' => 29.1,
                'humidity' => 62.5
            ]
        ];
    }

// Get locations
$locations = json_decode($report['locations'], true);
$location_names = [];
if (is_array($locations) && !empty($locations)) {
    $placeholders = str_repeat('?,', count($locations) - 1) . '?';
    $stmt = $pdo->prepare("SELECT name FROM locations WHERE id IN ($placeholders)");
    $stmt->execute($locations);
    $location_names = $stmt->fetchAll(PDO::FETCH_COLUMN);
}

// If no locations found, use a default
if (empty($location_names)) {
    $location_names = ['All Locations'];
}

if ($format === 'pdf') {
    generatePDF($report, $air_quality_data, $location_names);
} elseif ($format === 'excel') {
    generateExcel($report, $air_quality_data, $location_names);
} else {
    die('Invalid format');
}

function generatePDF($report, $air_quality_data, $location_names) {
    // Set headers for PDF download
    header('Content-Type: application/pdf');
    header('Content-Disposition: attachment; filename="report_' . $report['id'] . '_' . date('Y-m-d') . '.pdf"');
    
    // Create PDF content using FPDF or similar
    // For now, we'll create a simple HTML-based PDF using TCPDF or similar
    
    // Simple HTML to PDF conversion
    $html = '
    <html>
    <head>
        <style>
            body { font-family: Arial, sans-serif; margin: 20px; }
            .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 20px; margin-bottom: 30px; }
            .section { margin-bottom: 25px; }
            .section h2 { color: #2c3e50; border-bottom: 1px solid #bdc3c7; padding-bottom: 5px; }
            table { width: 100%; border-collapse: collapse; margin: 15px 0; }
            th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
            th { background-color: #f8f9fa; font-weight: bold; }
            .summary { background-color: #f8f9fa; padding: 15px; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="header">
            <h1>Air Quality Report</h1>
            <p>Report #' . $report['id'] . ' - ' . ucfirst($report['type']) . '</p>
            <p>Generated on ' . date('F j, Y', strtotime($report['created_at'])) . '</p>
        </div>
        
        <div class="section">
            <h2>Report Summary</h2>
            <div class="summary">
                <p><strong>Report Type:</strong> ' . ucfirst($report['type']) . '</p>
                <p><strong>Date Range:</strong> ' . date('F j, Y', strtotime($report['start_date'])) . ' to ' . date('F j, Y', strtotime($report['end_date'])) . '</p>
                <p><strong>Locations:</strong> ' . implode(', ', $location_names) . '</p>
                <p><strong>Generated By:</strong> ' . htmlspecialchars($report['generated_by_name']) . '</p>
            </div>
        </div>
        
        <div class="section">
            <h2>Air Quality Data Summary</h2>
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Location</th>
                        <th>Device</th>
                        <th>PM2.5 (μg/m³)</th>
                        <th>PM10 (μg/m³)</th>
                        <th>CO2 (ppm)</th>
                        <th>Temperature (°C)</th>
                        <th>Humidity (%)</th>
                    </tr>
                </thead>
                <tbody>';
    
    foreach ($air_quality_data as $data) {
        $html .= '
                    <tr>
                        <td>' . date('M j, Y H:i', strtotime($data['timestamp'])) . '</td>
                        <td>' . htmlspecialchars($data['location_name']) . '</td>
                        <td>' . htmlspecialchars($data['device_name']) . '</td>
                        <td>' . number_format($data['pm25'], 2) . '</td>
                        <td>' . number_format($data['pm10'], 2) . '</td>
                        <td>' . number_format($data['co2'], 2) . '</td>
                        <td>' . number_format($data['temperature'], 1) . '</td>
                        <td>' . number_format($data['humidity'], 1) . '</td>
                    </tr>';
    }
    
    $html .= '
                </tbody>
            </table>
        </div>
        
        <div class="section">
            <h2>Data Statistics</h2>
            <table>
                <tr>
                    <th>Metric</th>
                    <th>Average</th>
                    <th>Maximum</th>
                    <th>Minimum</th>
                </tr>';
    
    if (!empty($air_quality_data)) {
        $pm25_values = array_column($air_quality_data, 'pm25');
        $pm10_values = array_column($air_quality_data, 'pm10');
        $co2_values = array_column($air_quality_data, 'co2');
        $temp_values = array_column($air_quality_data, 'temperature');
        $humidity_values = array_column($air_quality_data, 'humidity');
        
        $html .= '
                <tr>
                    <td>PM2.5 (μg/m³)</td>
                    <td>' . number_format(array_sum($pm25_values) / count($pm25_values), 2) . '</td>
                    <td>' . number_format(max($pm25_values), 2) . '</td>
                    <td>' . number_format(min($pm25_values), 2) . '</td>
                </tr>
                <tr>
                    <td>PM10 (μg/m³)</td>
                    <td>' . number_format(array_sum($pm10_values) / count($pm10_values), 2) . '</td>
                    <td>' . number_format(max($pm10_values), 2) . '</td>
                    <td>' . number_format(min($pm10_values), 2) . '</td>
                </tr>
                <tr>
                    <td>CO2 (ppm)</td>
                    <td>' . number_format(array_sum($co2_values) / count($co2_values), 2) . '</td>
                    <td>' . number_format(max($co2_values), 2) . '</td>
                    <td>' . number_format(min($co2_values), 2) . '</td>
                </tr>
                <tr>
                    <td>Temperature (°C)</td>
                    <td>' . number_format(array_sum($temp_values) / count($temp_values), 1) . '</td>
                    <td>' . number_format(max($temp_values), 1) . '</td>
                    <td>' . number_format(min($temp_values), 1) . '</td>
                </tr>
                <tr>
                    <td>Humidity (%)</td>
                    <td>' . number_format(array_sum($humidity_values) / count($humidity_values), 1) . '</td>
                    <td>' . number_format(max($humidity_values), 1) . '</td>
                    <td>' . number_format(min($humidity_values), 1) . '</td>
                </tr>';
    }
    
    $html .= '
            </table>
        </div>
        
        <div class="section">
            <h2>Report Notes</h2>
            <p>This report was automatically generated by the AirQuality IoT Air Quality Monitoring System.</p>
            <p>For questions or additional analysis, please contact the system administrator.</p>
        </div>
    </body>
    </html>';
    
    // For now, we'll output the HTML (you can use a proper HTML to PDF converter)
    // In production, you'd use TCPDF, FPDF, or similar library
    echo $html;
}

function generateExcel($report, $air_quality_data, $location_names) {
    // Set headers for Excel download
    header('Content-Type: application/vnd.ms-excel');
    header('Content-Disposition: attachment; filename="report_' . $report['id'] . '_' . date('Y-m-d') . '.xls"');
    
    // Create Excel content
    $excel_content = "
    <table border='1'>
        <tr>
            <td colspan='8' style='text-align: center; font-weight: bold; font-size: 16px;'>Air Quality Report</td>
        </tr>
        <tr>
            <td colspan='8' style='text-align: center;'>Report #" . $report['id'] . " - " . ucfirst($report['type']) . "</td>
        </tr>
        <tr>
            <td colspan='8' style='text-align: center;'>Generated on " . date('F j, Y', strtotime($report['created_at'])) . "</td>
        </tr>
        <tr></tr>
        <tr>
            <td colspan='8' style='font-weight: bold; background-color: #f0f0f0;'>Report Summary</td>
        </tr>
        <tr>
            <td><strong>Report Type:</strong></td>
            <td colspan='7'>" . ucfirst($report['type']) . "</td>
        </tr>
        <tr>
            <td><strong>Date Range:</strong></td>
            <td colspan='7'>" . date('F j, Y', strtotime($report['start_date'])) . " to " . date('F j, Y', strtotime($report['end_date'])) . "</td>
        </tr>
        <tr>
            <td><strong>Locations:</strong></td>
            <td colspan='7'>" . implode(', ', $location_names) . "</td>
        </tr>
        <tr>
            <td><strong>Generated By:</strong></td>
            <td colspan='7'>" . htmlspecialchars($report['generated_by_name']) . "</td>
        </tr>
        <tr></tr>
        <tr>
            <td colspan='8' style='font-weight: bold; background-color: #f0f0f0;'>Air Quality Data</td>
        </tr>
        <tr style='background-color: #e0e0e0; font-weight: bold;'>
            <td>Date</td>
            <td>Location</td>
            <td>Device</td>
            <td>PM2.5 (μg/m³)</td>
            <td>PM10 (μg/m³)</td>
            <td>CO2 (ppm)</td>
            <td>Temperature (°C)</td>
            <td>Humidity (%)</td>
        </tr>";
    
    foreach ($air_quality_data as $data) {
        $excel_content .= "
        <tr>
            <td>" . date('M j, Y H:i', strtotime($data['timestamp'])) . "</td>
            <td>" . htmlspecialchars($data['location_name']) . "</td>
            <td>" . htmlspecialchars($data['device_name']) . "</td>
            <td>" . number_format($data['pm25'], 2) . "</td>
            <td>" . number_format($data['pm10'], 2) . "</td>
            <td>" . number_format($data['co2'], 2) . "</td>
            <td>" . number_format($data['temperature'], 1) . "</td>
            <td>" . number_format($data['humidity'], 1) . "</td>
        </tr>";
    }
    
    $excel_content .= "
    </table>";
    
    echo $excel_content;
}
?>
